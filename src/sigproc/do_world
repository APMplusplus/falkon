#!/bin/bash

LANG=C; export LANG

if [ ! "$ESTDIR" ]
then
   echo "environment variable ESTDIR is unset"
   echo "set it to your local speech tools directory e.g."
   echo '   bash$ export ESTDIR=/home/awb/projects/speech_tools/'
   echo or
   echo '   csh% setenv ESTDIR /home/awb/projects/speech_tools/'
   exit 1
fi

if [ ! "$FESTVOXDIR" ]
then
   echo "environment variable FESTVOXDIR is unset"
   echo "set it to your local festvox directory e.g."
   echo '   bash$ export FESTVOXDIR=/home/awb/projects/festvox/'
   echo or
   echo '   csh% setenv FESTVOXDIR /home/awb/projects/festvox/'
   exit 1
fi

if [ "$CLUSTERGENDIR" = "" ]
then
    export CLUSTERGENDIR=$FESTVOXDIR/src/clustergen
fi

SPTKDIR='/home/srallaba/tools/SPTK-3.9.clone'

TRAIN_DIR='.'

SRC_DIR=$1
TGT_DIR=$2
FEATURE_DIR='../feats'
FILE=$3

x2x=$SPTKDIR/bin/x2x
mcep=$SPTKDIR/bin/mcep
mgc2sp=$SPTKDIR/bin/mgc2sp
frame=$SPTKDIR/bin/frame
window=$SPTKDIR/bin/window
excite=$SPTKDIR/bin/excite
mlsadf=$SPTKDIR/bin/mlsadf
dtw=$SPTKDIR/bin/dtw
delta=$SPTKDIR/bin/delta
MINMAX=$SPTKDIR/bin/minmax
PITCH=$SPTKDIR/bin/pitch
SOPR=$SPTKDIR/bin/sopr
WORLD_DIR='/home/srallaba/hacks/repos/world_merlin/WORLD'
WORLD_DIR='/home/srallaba/hacks/repos/merlin/tools/bin/WORLD'
FRAME=$SPTKDIR/bin/frame
WINDOW=$SPTKDIR/bin/window

#echo $SRC_DIR $TGT_DIR

#mkdir -p $FEATURE_DIR $FEATURE_DIR/${SRC_DIR} $FEATURE_DIR/${TGT_DIR} $FEATURE_DIR/${SRC_DIR}_${TGT_DIR}



if [ "$1" = "combine_coeffs_world" ]
then

    
   SRC_DIR=$2
   FILE=$3
   WORLD_FEATURE_DIR='.'
   nFFTHalf=1024 
   alpha=0.58
   mc_size=59
   order=4
   order1=5
   mc_size1=60
   mgc_dir=${WORLD_FEATURE_DIR}/${SRC_DIR}/mgc
   lf0_dir=${WORLD_FEATURE_DIR}/${SRC_DIR}/lf0
   bap_dir=${WORLD_FEATURE_DIR}/${SRC_DIR}/bap 
   mkdir -p $mgc_dir $lf0_dir $bap_dir

   cat $FILE | while read TRAIN_FILENAME ;

   do
    echo "Combining coefficients for " $TRAIN_FILENAME 

    # Compute log f0
    $x2x +af ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.f0_ascii   | $SOPR -magic 0.0 -LN -MAGIC -1.0 > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_world  || exit 0
    cp ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_world ${lf0_dir}/${TRAIN_FILENAME}.lf0
    $x2x +fa ${lf0_dir}/${TRAIN_FILENAME}.lf0 > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_ascii
    #echo "Computed log f0"   ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_ascii 

    # Compute MGC
    $x2x +af ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.sp_ascii | $SOPR -R -m 32768.0 | $mcep -a $alpha -m $mc_size -l $nFFTHalf -e 1.0E-8 -j 0 -f 0.0 -q 3  > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mcep_world || exit 0
    cp ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mcep_world ${mgc_dir}/${TRAIN_FILENAME}.mgc
    $x2x +fa$mc_size1 ${mgc_dir}/${TRAIN_FILENAME}.mgc > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mgc_ascii
    #echo "Computed MGC "    ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mgc_ascii

    # Compute band aperiodicity
    $x2x +af ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.ap_ascii | $SOPR -R -m 32768.0 | $mcep -a $alpha -m $order -l $nFFTHalf -e 1.0E-8 -j 0 -f 0.0 -q 3 >  ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_world || exit 0
    cp ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_world ${bap_dir}/${TRAIN_FILENAME}.bap
    $x2x +fa$order1 ${bap_dir}/${TRAIN_FILENAME}.bap > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_ascii
    #echo $TRAIN_FILENAME "Computed band aperiodicity" ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_ascii

    # Combine the coefficients
    paste ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mgc_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_ascii > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.ccoeffs_ascii
    rm -r ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mgc_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_asci 
    rm -r $mgc_dir/* $lf0_dir/* $bap_dir/*
  done
  rm -rf $mgc_dir $lf0_dir $bap_dir
fi


if [ "$1" = "wav2world" ]
then

    
   SRC_DIR=$2
   FILE=$3
   FEATS_DIR=$4
   WORLD_FEATURE_DIR='.'
   mkdir -p ${FEATS_DIR}

   cat $FILE | while read TRAIN_FILENAME ;
   do
     echo "Extracting features for " $TRAIN_FILENAME
     python3.5 ${FALCON_DIR}/src/sigproc/extract_worldcoeffs.py ${SRC_DIR}/${TRAIN_FILENAME}.wav ${FEATS_DIR}
     
   done 

   echo "Got the ascii features"
   $0 combine_coeffs_world $4 $3
fi


if [ "$1" = "combine_coeffs_world_singlefile" ]
then

    
   SRC_DIR=$2
   FILE=$3
   WORLD_FEATURE_DIR='.'
   nFFTHalf=1024 
   alpha=0.58
   mc_size=59
   order=4
   order1=5
   mc_size1=60
   mgc_dir=${WORLD_FEATURE_DIR}/${SRC_DIR}/mgc
   lf0_dir=${WORLD_FEATURE_DIR}/${SRC_DIR}/lf0
   bap_dir=${WORLD_FEATURE_DIR}/${SRC_DIR}/bap 
   mkdir -p $mgc_dir $lf0_dir $bap_dir

   TRAIN_FILENAME=$FILE

    #echo "Combining coefficients for " $TRAIN_FILENAME 

    # Compute log f0
    $x2x +af ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.f0_ascii   | $SOPR -magic 0.0 -LN -MAGIC -1.0 > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_world  || exit 0
    cp ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_world ${lf0_dir}/${TRAIN_FILENAME}.lf0
    $x2x +fa ${lf0_dir}/${TRAIN_FILENAME}.lf0 > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_ascii
    #echo "Computed log f0"   ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_ascii 

    # Compute MGC
    $x2x +af ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.sp_ascii | $SOPR -R -m 32768.0 | $mcep -a $alpha -m $mc_size -l $nFFTHalf -e 1.0E-8 -j 0 -f 0.0 -q 3  > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mcep_world || exit 0
    cp ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mcep_world ${mgc_dir}/${TRAIN_FILENAME}.mgc
    $x2x +fa$mc_size1 ${mgc_dir}/${TRAIN_FILENAME}.mgc > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mgc_ascii
    #echo "Computed MGC "    ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mgc_ascii

    # Compute band aperiodicity
    $x2x +af ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.ap_ascii | $SOPR -R -m 32768.0 | $mcep -a $alpha -m $order -l $nFFTHalf -e 1.0E-8 -j 0 -f 0.0 -q 3 >  ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_world || exit 0
    cp ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_world ${bap_dir}/${TRAIN_FILENAME}.bap
    $x2x +fa$order1 ${bap_dir}/${TRAIN_FILENAME}.bap > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_ascii
    #echo $TRAIN_FILENAME "Computed band aperiodicity" ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_ascii

    # Combine the coefficients
    paste ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mgc_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_ascii > ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.ccoeffs_ascii
    rm -r ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.lf0_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.mgc_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.bap_ascii 
    #rm -r $mgc_dir/* $lf0_dir/* $bap_dir/*
    rm -r $mgc_dir/${TRAIN_FILENAME}.mgc*  $lf0_dir/${TRAIN_FILENAME}.lf0* $bap_dir/${TRAIN_FILENAME}.bap* #${WORLD_FEATURE_DIR}/${SRC_DIR}/_world
    rm -r ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.f0_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.sp_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.ap_ascii
    #echo "Removed " ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.f0_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.sp_ascii ${WORLD_FEATURE_DIR}/${SRC_DIR}/${TRAIN_FILENAME}.ap_ascii

fi



if [ "$1" = "wav2world_file" ]
then

    
   SRC_DIR=$2
   FILE=$3
   FEATS_DIR=$4
   WORLD_FEATURE_DIR='.'
   mkdir -p ${FEATS_DIR}

   cat $FILE | while read TRAIN_FILENAME ;
   do
     
    if [ ! -f ${TRAIN_FILENAME}.ccoeffs_ascii ]; then

       echo "Extracting features for " $TRAIN_FILENAME
       python3.5 ${FALCON_DIR}/src/sigproc/extract_worldcoeffs.py ${SRC_DIR}/${TRAIN_FILENAME}.wav ${FEATS_DIR}
       $0 combine_coeffs_world_singlefile $4  ${TRAIN_FILENAME}

    else
      
       echo "Found file " $TRAIN_FILENAME

    fi

   done 

fi


if [ "$1" = "parallel" ]
then

   ACTION="$2"
   SRC_FOLDER="$3"
   PROMPTFILE="$4"
   TGT_FOLDER="$5"

   num_cpus=$(cat /proc/cpuinfo 2>/dev/null | grep '^processor' | wc -l )
   seq 0 15 | xargs -n 1 -P $num_cpus $0 _parallelworker $ACTION $SRC_FOLDER $PROMPTFILE $TGT_FOLDER 
   exit 0

fi


if [ "$1" = "_parallelworker" ]
then

   ACTION="$2"
   SRC_FOLDER="$3"
   PROMPTFILE="$4"
   TGT_FOLDER="$5"  
   INDEX="$6"

   #echo $PROMPTFILE $INDEX
   mkdir -p tmpdir
   # Get our partition of PROMPTFILE
   SPLITPROMPTFILE=tmpdir/dobuild_parallelworker.$$.$INDEX
   cat $PROMPTFILE | awk "NR%16==$INDEX {print \$0}" > $SPLITPROMPTFILE  

   # Run our task ${TRAIN_FILENAME}.ccoeffs_ascii
   $0 $ACTION $SRC_FOLDER $SPLITPROMPTFILE $TGT_FOLDER
   
fi
